---
k8ses_es_version: 7.2.0
k8ses_namespace: "es-{{ k8ses_es_version | replace('.','-') }}"
k8ses_cluster_name: "{{ k8ses_namespace }}"
k8ses_infra: aws  # set to 'aws' or 'gcp' for cloud-based or 'k8s' for custom

# these storage defaults will be overridden automatically if k8ses_infra is set
# if storage_type is set in the playbook, it will be left intact even if infra is set
k8ses_storage_provisioner: kubernetes.io/no-provisioner
k8ses_storage_type: ''

k8ses_data_nodes: 2
k8ses_data_volsize: 100Gi
k8ses_data_memory_limit: 1Gi
k8ses_data_heap_size: 512m

k8ses_manage_kibana: true
k8ses_manage_beats_dash_config: true
k8ses_manage_filebeat_agent: true
k8ses_manage_metricbeat_agent: true
k8ses_manage_logstash: true
k8ses_manage_oauth2_proxy: false        # if you have an oauth2 provider (google, github, etc) and a valid SSL certificate, use this
k8ses_manage_nginx_proxy: true          # otherwise use this.

# for setting up a TLS-protected log ingestion endpoint
k8ses_logstash_selfsigned: false        # set to false if terminating SSL elsewhere
k8ses_logstash_cn: logstash.ansible.com # ignored if above is false
k8ses_logstash_ssl_key: ''              # string contents of custom ssl key. ignored if selfsigned == true
k8ses_logstash_ssl_crt: ''              # string contents of custom ssl cert. ignored if selfsigned == true

# logstash and nginx are a LoadBalancer type and Annotations let AWS/GCE create a cloud load balancer
k8ses_logstash_annotations: {}
  ### AWS example
  # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  # service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-west-2:111111111111:certificate/68111146-e1c8-4325-8a29-2d0155555db9"
  # service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
k8ses_nginx_annotations: {}
  ### AWS example
  # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  # service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-west-2:111111111111:certificate/68111146-e1c8-4325-8a29-2d0155555db9"
  # service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"

# this is for the HTTP Basic auth proxy
k8ses_nginx_users:
  - name: kibana
    password: letmein

# for oauth2 authentication. ignored if k8ses_manage_oauth2_proxy == false
# more info: https://hub.docker.com/r/machinedata/oauth2_proxy/
# ssl crt and key must be valid on  the domain used for kibana
k8ses_oauth2_ssl_crt: ''        
k8ses_oauth2_ssl_key: ''
k8ses_oauth2_client_id: ''
k8ses_oauth2_client_secret: ''
k8ses_email_domains: ['*']

#############################################################
### you probably don't need to change anything below this ###
#############################################################
k8ses_es_image: docker.elastic.co/elasticsearch/elasticsearch
k8ses_es_image_tag: "{{ k8ses_es_version }}"

k8ses_config_data: 
  java.security: |
    networkaddress.cache.ttl=60

k8ses_kibana_image: docker.elastic.co/kibana/kibana
k8ses_kibana_image_tag: "{{ k8ses_es_version }}"

k8ses_filebeat_image: docker.elastic.co/beats/filebeat
k8ses_filebeat_image_tag: "{{ k8ses_es_version }}"

k8ses_metricbeat_image: docker.elastic.co/beats/metricbeat
k8ses_metricbeat_image_tag: "{{ k8ses_es_version }}"

k8ses_logstash_image: docker.elastic.co/logstash/logstash
k8ses_logstash_image_tag: "{{ k8ses_es_version }}"
k8ses_logstash_beats_port: 8751

k8ses_oauth2_provider: google
k8ses_oauth2_image: machinedata/oauth2_proxy
k8ses_oauth2_image_tag: "2.2"
