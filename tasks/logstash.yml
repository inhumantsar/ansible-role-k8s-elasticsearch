- name: set up logstash pipeline
  k8s:
    api_version: v1
    kind: ConfigMap
    resource_definition:
      metadata:
        name: logstash-pipeline
        namespace: "{{ k8ses_namespace }}"
      data: 
        logstash.conf: "{{ lookup('template', './logstash-pipeline.conf.j2') }}"

- name: set up logstash config
  k8s:
    api_version: v1
    kind: ConfigMap
    resource_definition:
      metadata:
        name: logstash-conf
        namespace: "{{ k8ses_namespace }}"
      data: 
        logstash.yml: |-
          http.host: "0.0.0.0"
        pipelines.yml: |-
          - pipeline.id: main
            path.config: "/usr/share/logstash/pipeline/logstash.conf"

- name: Make sure ssl dirs exist
  file:
    state: directory
    path: "{{ item }}"
    owner: root
    group: root
    mode: 755
  become: true
  with_items:
    - /etc/ssl/csr
    - /etc/ssl/crt

- name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
  openssl_privatekey:
    path: "/etc/ssl/private/{{ k8ses_logstash_cn }}.pem"
  become: true
  when: k8ses_logstash_selfsigned == true

- name: Generate an OpenSSL Certificate Signing Request
  openssl_csr:
    path: "/etc/ssl/csr/{{ k8ses_logstash_cn }}.csr"
    privatekey_path: "/etc/ssl/private/{{ k8ses_logstash_cn }}.pem"
    common_name: "{{ k8ses_logstash_cn }}"
  become: true
  when: k8ses_logstash_selfsigned == true

- name: set up logstash ssl certs
  openssl_certificate:
    privatekey_path: "/etc/ssl/private/{{ k8ses_logstash_cn }}.pem"
    path: "/etc/ssl/crt/{{ k8ses_logstash_cn }}.crt"
    csr_path: "/etc/ssl/csr/{{ k8ses_logstash_cn }}.csr"
    provider: selfsigned
  become: true
  when: k8ses_logstash_selfsigned == true

- name: read in private key
  shell: "cat /etc/ssl/private/{{ k8ses_logstash_cn }}.pem"
  become: true
  register: pem
  no_log: true
  when: k8ses_logstash_selfsigned == true

- name: add logstash ssl certs to k8s
  k8s:
    api_version: v1
    kind: Secret
    resource_definition:
      metadata:
        namespace: "{{ k8ses_namespace }}"
        name: logstash-tls
      type: Opaque
      data:
        logstash.key: "{{ pem.stdout | b64encode }}"
        logstash.crt: "{{ lookup('file', '/etc/ssl/crt/' + k8ses_logstash_cn + '.crt') | b64encode }}"
  when: k8ses_logstash_selfsigned == true

- name: add logstash ssl certs to k8s
  k8s:
    api_version: v1
    kind: Secret
    resource_definition:
      metadata:
        namespace: "{{ k8ses_namespace }}"
        name: logstash-tls
      type: Opaque
      data:
        logstash.key: "{{ k8ses_logstash_ssl_key | b64encode }}"
        logstash.crt: "{{ k8ses_logstash_ssl_crt | b64encode }}"
  when:
    - k8ses_logstash_ssl_key != ''
    - k8ses_logstash_ssl_crt != ''
    - k8ses_logstash_selfsigned == false
    
- name: create logstash service
  k8s_service:
    namespace: "{{ k8ses_namespace }}"
    name: logstash
    type: LoadBalancer
    selector:
      app: logstash
    ports:
      - name: beats
        port: "{{ k8ses_logstash_beats_port }}"
    resource_definition:
      metadata:
        annotations: "{{ k8ses_logstash_annotations }}"

- set_fact:
    logstash_volumes:
      - name: logstash-pipeline
        configMap:
          name: logstash-pipeline
      - name: logstash-conf
        configMap:
          name: logstash-conf
    logstash_volume_mounts:  
      - name: logstash-pipeline
        mountPath: /usr/share/logstash/pipeline
      - name: logstash-conf
        mountPath: /usr/share/logstash/config
      
- set_fact:
    logstash_volumes:
      - name: logstash-pipeline
        configMap:
          name: logstash-pipeline
      - name: logstash-tls
        secret:
          secretName: logstash-tls    
      - name: logstash-conf
        configMap:
          name: logstash-conf
    logstash_volume_mounts:  
      - name: logstash-pipeline
        mountPath: /usr/share/logstash/pipeline
      - name: logstash-conf
        mountPath: /usr/share/logstash/config
      - name: logstash-tls
        mountPath: /usr/share/logstash/ssl
  when: (k8ses_logstash_ssl_key != '' and k8ses_logstash_ssl_crt != '') or k8ses_logstash_selfsigned



- name: create logstash deployment
  k8s:
    api_version: apps/v1
    kind: Deployment
    resource_definition:
      metadata:
        namespace: "{{ k8ses_namespace }}"
        name: logstash
        labels:
          app: logstash
      spec:
        replicas: 2
        selector:
          matchLabels:
            app: logstash
        template:
          metadata:
            labels:
              app: logstash
          spec:
            containers:
              - name: logstash
                image: "{{ k8ses_logstash_image }}:{{ k8ses_logstash_image_tag }}"
                ports:
                  - containerPort: "{{ k8ses_logstash_beats_port }}"
                volumeMounts: "{{ logstash_volume_mounts }}"

            # spec.template.spec.volumes
            volumes: "{{ logstash_volumes }}"
